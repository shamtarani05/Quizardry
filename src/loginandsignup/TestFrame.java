/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginandsignup;

import com.mysql.cj.xdevapi.Statement;
import com.sun.jdi.connect.spi.Connection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.ButtonGroup;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import static loginandsignup.Connections.getConnection;

/**
 *
 * @author LENOVO
 */
public class TestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TestFrame
     */
   
    public void settitile(String Text)
    {
        title_quiz.setText(Text);
    }
    public void setid(String text)
   {
    id.setText(text);  
   }
    public TestFrame() {
         initComponents();
         user2.setText(user.studusername);
         setExtendedState(JFrame.MAXIMIZED_BOTH);
         addComponentsVerticallys();
         Timer timer = new Timer(1000, new TimerListener(timerlabel,Quiz1.QuizSetting(Loginandsignup.name, Quizzes_for_user.ids))); // Timer ticks every second
         timer.start(); //
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        user2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paper1 = new javax.swing.JPanel();
        timerlabel = new javax.swing.JLabel();
        title_quiz = new javax.swing.JLabel();
        id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(124, 131, 188));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_menu_48px_1.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("I");

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("QUIZARDRY");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search_26px.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("I");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/group_message_26px.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("I");

        user2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        user2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/male_user_50px.png"))); // NOI18N
        user2.setText("   Hello , User");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(user2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(user2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        paper1.setBackground(new java.awt.Color(255, 255, 255));
        paper1.setLayout(new java.awt.GridBagLayout());

        timerlabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        timerlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timerlabel.setText("Timer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 166;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 211, 0);
        paper1.add(timerlabel, gridBagConstraints);

        title_quiz.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        title_quiz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_quiz.setText("Quiz Title");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 48;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 242, 0, 28);
        paper1.add(title_quiz, gridBagConstraints);

        id.setEditable(false);
        id.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 171;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 0, 0, 0);
        paper1.add(id, gridBagConstraints);

        jScrollPane1.setViewportView(paper1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestFrame().setVisible(true);
            }
        });
    }
   
    
    private void addQuestions()
    {
        
    }
    
   
   
    
    
 private int qno = 1;



private void addComponentsVerticallys() {
    try {   
        System.out.println(Quizzes_for_user.ids);
        System.out.println(id.getText());
        Quiz1 q = new Quiz1();
        ArrayList<String> quizzes = q.retriveQuestion(Quizzes_for_user.ids, Loginandsignup.name);
        System.out.println(quizzes.size());
        
        ArrayList<ButtonGroup> buttonGroups = new ArrayList<>();
        
        for (int i = 0; i < quizzes.size(); i += 6) {
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.gridx = 0;
            gbc.gridy = paper1.getComponentCount();
            gbc.fill = GridBagConstraints.HORIZONTAL;
            gbc.insets = new Insets(0, 0, 0, 0);
            gbc.anchor = GridBagConstraints.CENTER;
            
            Viewquestions j1 = new Viewquestions();

            ButtonGroup buttonGroup = new ButtonGroup();
            buttonGroup.add(j1.getA());
            buttonGroup.add(j1.getB());
            buttonGroup.add(j1.getC());
            buttonGroup.add(j1.getD());

            j1.getA().setActionCommand("A");
            j1.getB().setActionCommand("B");
            j1.getC().setActionCommand("C");
            j1.getD().setActionCommand("D");
            
            j1.setquestionno(quizzes.get(i));
            j1.setoption1(quizzes.get(i + 1));
            j1.setoption2(quizzes.get(i + 2));
            j1.setoption3(quizzes.get(i + 3));
            j1.setoption4(quizzes.get(i + 4));
            j1.setEnabled(true);
            j1.setqno(qno);
            paper1.add(j1, gbc);
            buttonGroups.add(buttonGroup);
            paper1.revalidate();
            paper1.repaint();
            qno++;
        }

        JButton submitButton = new JButton("Submit");
        submitButton.setPreferredSize(new Dimension(100, 40));
        submitButton.setBackground(new Color(59, 89, 182));
        submitButton.setForeground(Color.WHITE);
        submitButton.setFocusPainted(false);
        submitButton.setFont(new Font("Tahoma", Font.BOLD, 12));

        Result r = new Result();
        submitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean allAnswered = true;
                
                for (ButtonGroup bg : buttonGroups) {
                    if (bg.getSelection() == null) {
                        allAnswered = false;
                        break;
                    }
                }
                if(!allAnswered)
                {
                    JOptionPane.showMessageDialog(null, "Attempt all questions");
                }
                else
                {
                    r.Setid(Quizzes_for_user.ids);
                    r.Setusername(user.studusername);
                try {
                    String score = user.result(user.studusername, Quizzes_for_user.ids, Loginandsignup.name);
                    
                    r.Setscore(score);
                    
                    r.setVisible(true);
                    dispose();
                    
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            }
        });
        
        GridBagConstraints gbcSubmit = new GridBagConstraints();
        gbcSubmit.gridx = 0;
        gbcSubmit.gridy = paper1.getComponentCount();
        gbcSubmit.fill = GridBagConstraints.HORIZONTAL;
        gbcSubmit.insets = new Insets(10, 0, 0, 0);
        gbcSubmit.anchor = GridBagConstraints.CENTER;
        
        paper1.add(submitButton, gbcSubmit);
        paper1.revalidate();
        paper1.repaint();

    } catch (Exception e) {
        e.printStackTrace();
    }
}
public void dispose()
{
    super.dispose();
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel paper1;
    private javax.swing.JLabel timerlabel;
    private javax.swing.JLabel title_quiz;
    private javax.swing.JLabel user2;
    // End of variables declaration//GEN-END:variables
}
 
 class TimerListener implements ActionListener {
    private JLabel timerLabel;
    private int hours;
    private int minutes;
    private int seconds;
    private ArrayList<String> sqlTime;

    public TimerListener(JLabel timerLabel, ArrayList<String> sqlTime) {
        this.timerLabel = timerLabel;
        this.sqlTime = sqlTime;
        initializeTimerValues();
    }

    private void initializeTimerValues() {
        if (sqlTime != null && sqlTime.size() >= 3) {
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                Date date = sdf.parse(sqlTime.get(1));

                this.hours = date.getHours();
                this.minutes = date.getMinutes();
                this.seconds = date.getSeconds();
            } catch (ParseException ex) {
                Logger.getLogger(TimerListener.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (hours == 0 && minutes == 0 && seconds == 0) {
            // Timer finished
            ((Timer) e.getSource()).stop(); // Stop the timer
            JOptionPane.showMessageDialog(null, "Time's up!");
            TestFrame t = new TestFrame();
            t.dispose();
            Result r = new Result();
            r.Setid(Quizzes_for_user.ids);
            r.Setusername(user.studusername);
            try {
                
                r.Setscore( user.result(user.studusername, Quizzes_for_user.ids, Loginandsignup.name));
                
                // Perform additional action here
            } catch (IOException ex) {
                Logger.getLogger(TimerListener.class.getName()).log(Level.SEVERE, null, ex);
            }
            r.setVisible(true);
            
        } else {
            seconds--; // Decrement seconds
            if (seconds < 0) {
                seconds = 59;
                minutes--;

                if (minutes < 0) {
                    minutes = 59;
                    hours--;

                    if (hours < 0) {
                        hours = 0;
                        minutes = 0;
                        seconds = 0;
                    }
                }
            }

            // Update the label text with the updated time
            timerLabel.setText(String.format("%02d:%02d:%02d", hours, minutes, seconds));
        }
    }
}